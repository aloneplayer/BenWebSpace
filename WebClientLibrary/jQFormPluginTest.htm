<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>jQuery Form Plugin Test</title>
     <script src="jQuery/jquery-1.4.2.js" type="text/javascript"></script>
    <script src="jQPlugins/jquery.form.js" type="text/javascript"></script>
    <script type="text/javascript">
        /*---- Usage----------------------------------------
        $('#myFormId').resetForm();

        $('#myFormId').clearForm();
        $('#myFormId .specialFields').clearFields();



        var queryString = $('#myFormId').formSerialize(); 
        ------------------------------------------------*/
        $(function ()
        {
            var options = {
                target: '#output1',   // target element(s) to be updated with server response 
                beforeSubmit: showRequest,  // pre-submit callback 
                success: showResponse,  // post-submit callback 
               
                // other available options: 
                //url:       url         // override for form's 'action' attribute 
                //type:      type        // 'get' or 'post', override for form's 'method' attribute 
                //dataType:  null        // 'xml', 'script', or 'json' (expected server response type) 
                //clearForm: true        // clear all form fields after successful submit 
                //resetForm: true        // reset the form after successful submit 

                // $.ajax options can be used here too, for example: 
                //timeout:   3000 
            }

            // bind 'myForm' and provide a simple callback function
            $('#myForm').ajaxForm(options);

            /*--------------------------  Method 2
            $('#myFormId').submit(function ()
            {
            // submit the form    
            $(this).ajaxSubmit();
      
            // !!! Important !!! 
            // always return false to prevent standard browser submit and page navigation 
            return false;
            });
            --------------------------------------*/
        });


        // pre-submit callback 
        function showRequest(formData, jqForm, options)
        {
            // formData is an array; here we use $.param to convert it to a string to display it 
            // but the form plugin does this for you automatically when it submits the data 
            var queryString = $.param(formData);

            // jqForm is a jQuery object encapsulating the form element.  To access the 
            // DOM element for the form do this: 
            // var formElement = jqForm[0]; 

            alert('About to submit: \n\n' + queryString);

            // here we could return false to prevent the form from being submitted; 
            // returning anything other than false will allow the form submit to continue 
            return true;
        }

        // post-submit callback 
        function showResponse(responseText, statusText)
        {
            // for normal html responses, the first argument to the success callback 
            // is the XMLHttpRequest object's responseText property 

            // if the ajaxForm method was passed an Options Object with the dataType 
            // property set to 'xml' then the first argument to the success callback 
            // is the XMLHttpRequest object's responseXML property 

            // if the ajaxForm method was passed an Options Object with the dataType 
            // property set to 'json' then the first argument to the success callback 
            // is the json data object returned by the server 

            alert('status: ' + statusText + '\n\nresponseText: \n' + responseText +
        '\n\nThe output div should have already been updated with the responseText.');
        } 
    </script>
</head>
<body>
  <a href="http://docs.jquery.com/Plugins:Forms">jQuery Form Plugin</a>
    <br />
    <a href="http://imleeo.com/tag/jquery-form-plugin">jQuery Form Plugin Document</a>
    <br />
    <form id="myForm" action="server/ProcessFormPost.aspx" method="post">
    Name:
    <input type="text" name="name" />
    Comment:
    <textarea name="comment"></textarea>
    <input type="submit" value="Submit Comment" />
    </form>
    <h1>
        Output Div:</h1>
    <div id="output1">
        AJAX response will replace this content.</div>
</body>
</html>
